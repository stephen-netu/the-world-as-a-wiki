---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import NoteCard from "../components/NoteCard.astro";
const raw = await getCollection('notes');
const notes = raw.filter(n => !n.data.draft);
const toISO = (d: unknown) => {
  if (!d) return '';
  if (d instanceof Date) return d.toISOString();
  const dt = new Date(String(d));
  return isNaN(dt.getTime()) ? String(d) : dt.toISOString();
};
notes.sort((a,b)=> toISO(b.data.date).localeCompare(toISO(a.data.date)));
const summary = notes.map(n=>({ slug:n.slug, title:n.data.title, description:n.data.description||'', tags:n.data.tags||[], date: toISO(n.data.date) }));
---
<BaseLayout title="A Paracosm: the World">
  <section class="hero" style="margin-bottom:1rem">
    <div>
      <h1>A Paracosm: the World</h1>
      <div class="tagline">Greetings, welcome to Haven.</div>
    </div>
    <div class="portals">
      <a class="portal" href={new URL('atlas/', Astro.site).pathname}>🗺️ Enter the Atlas</a>
      <a class="portal" href={new URL('timeline/', Astro.site).pathname}>🕰️ View the Timeline</a>
      <a class="portal" href={new URL('codex/', Astro.site).pathname}>📖 Open the Codex</a>
      <a class="portal" href={new URL('characters/', Astro.site).pathname}>👥 Meet the Characters</a>
      <a class="portal" href={new URL('graph', Astro.site).pathname}>🕸️ Explore the Graph</a>
      <button id="random-note" class="portal" style="text-align:left; cursor:pointer;">🎲 Take me somewhere</button>
    </div>
    <input id="search" class="input" placeholder="Search notes and tags…" />
  </section>

  <section class="grid" id="results">
    {summary.slice(0, 12).map(n => (
      <NoteCard title={n.title} slug={n.slug} date={n.date} description={n.description} tags={n.tags} />
    ))}
  </section>

  <script type="application/json" id="notes-data">{JSON.stringify(summary)}</script>
  <script type="module">
    const data = JSON.parse(document.getElementById('notes-data').textContent);
    const search = document.getElementById('search');
    const results = document.getElementById('results');
    const randomBtn = document.getElementById('random-note');
    const BASE = (window.__BASE_URL__ || '/');
    const render = (list) => {
      results.innerHTML = list.slice(0, 48).map(n => `
        <article class="card">
          <h3><a href="${BASE}notes/${n.slug}/">${n.title}</a></h3>
          ${n.date ? `<div class="note-meta">${n.date}</div>` : ''}
          ${n.description ? `<p>${n.description}</p>` : ''}
          <div>${(n.tags||[]).map(t=>`<span class="tag">${t}</span>`).join(' ')}</div>
        </article>`).join('');
    };
    render(data);
    search.addEventListener('input', () => {
      const q = search.value.toLowerCase();
      const filtered = data.filter(n => (
        n.title.toLowerCase().includes(q) ||
        (n.description||'').toLowerCase().includes(q) ||
        (n.tags||[]).some(t => t.toLowerCase().includes(q))
      ));
      render(filtered);
    });
    randomBtn?.addEventListener('click', () => {
      if (!data.length) return;
      const pick = data[Math.floor(Math.random() * data.length)];
      window.location.href = BASE + 'notes/' + pick.slug + '/';
    });
  </script>
</BaseLayout>
